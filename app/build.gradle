apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'realm-android'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

android {
    dataBinding {
        enabled = true
    }
    compileSdkVersion 28
    defaultConfig {
        applicationId "ir.hosseinabbasi.cevt"
        minSdkVersion 14
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            buildConfigField("String", "BASE_URL", "\"https://api.openweathermap.org/data/2.5/\"")
            buildConfigField("String", "API_KEY", "\"af73216b9b8128713394e2043d752bb3\"")
        }
        debug {
            minifyEnabled false
            shrinkResources false
            debuggable true
            applicationIdSuffix ".debug"
            versionNameSuffix "-DEBUG"

            buildConfigField("String", "BASE_URL", "\"https://api.openweathermap.org/data/2.5/\"")
            buildConfigField("String", "API_KEY", "\"af73216b9b8128713394e2043d752bb3\"")
            signingConfig android.signingConfigs.debug
        }
        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}

android.applicationVariants.all { variant ->
    if (variant.buildType.name == "debug") {
        def aptOutputDir = new File(buildDir, "generated/source/apt/${variant.unitTestVariant.dirName}")
        variant.unitTestVariant.addJavaSourceFoldersToModel(aptOutputDir)
        assembleDebug.finalizedBy('assembleDebugUnitTest')
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    // Android Support libs
    [
            'design',
            'support-v4',
            'appcompat-v7',
            'recyclerview-v7',
            'cardview-v7',
            'support-annotations',
            'exifinterface'
    ].each {
        implementation "com.android.support:${it}:${supportVersion}"
    }
    // database
    kapt 'dk.ilios:realmfieldnameshelper:1.1.1'
    // network
    implementation "com.squareup.retrofit2:retrofit:${retrofit2Version}"
    implementation "com.squareup.retrofit2:adapter-rxjava2:${retrofit2Version}"
    implementation "com.squareup.retrofit2:converter-gson:${retrofit2Version}"
    implementation 'com.squareup.okhttp3:okhttp:3.10.0'
    // parser
    implementation 'com.google.code.gson:gson:2.8.2'
    // dependency injection
    implementation 'javax.inject:javax.inject:1'
    implementation "com.google.dagger:dagger:${daggerVersion}"
    kapt "com.google.dagger:dagger-compiler:${daggerVersion}"
    compileOnly 'javax.annotation:jsr250-api:1.0'
    compileOnly 'org.glassfish:javax.annotation:10.0-b28'
    // reactive
    implementation 'io.reactivex.rxjava2:rxjava:2.1.14'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'
    // logger
    implementation 'com.jakewharton.timber:timber:4.5.1'
    // ui
    implementation "com.jakewharton:butterknife:${butterknifeVersion}"
    kapt "com.jakewharton:butterknife-compiler:${butterknifeVersion}"
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    implementation 'com.squareup.picasso:picasso:2.71828'
    //other
    implementation 'com.android.support:multidex:1.0.3'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.anko:anko:$anko_version"
    kapt "com.android.databinding:compiler:$android_plugin_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    // test
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test:rules:1.0.2'
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-contrib:$espressoVersion"
    implementation "com.android.support.test.espresso:espresso-idling-resource:$espressoVersion"
    androidTestImplementation 'com.android.support:support-annotations:27.1.1'
    testImplementation "org.robolectric:robolectric:3.8"
    testImplementation "org.mockito:mockito-core:2.19.0"
    testAnnotationProcessor "com.google.dagger:dagger-compiler:${daggerVersion}"
    androidTestAnnotationProcessor "com.google.dagger:dagger-compiler:${daggerVersion}"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.0.0-RC1"
    testImplementation "org.powermock:powermock-module-junit4:$powermockVersion"
    testImplementation "org.powermock:powermock-api-mockito:$powermockVersion"
}
